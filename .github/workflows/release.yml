name: release

on:
  push:
    branches:
      - main

env:
  PYTHON_VERSION: "3.7"
  PACKAGE_NAME: "fast_alphashape"

jobs:
  # **************************************************************************
  # Build wheels on Win/Mac/Linux (only on push to main branch)
  # ***************************************************************************
  build-linux:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'Automatically generated by python-semantic-release')
    strategy:
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: 2014
          args: --release --out dist
          maturin-version: "v0.13.0"
      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          pip install pytest
          pytest tests/
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  # build-windows:
  #   runs-on: windows-latest
  #   if: contains(github.event.head_commit.message, 'Automatically generated by python-semantic-release')
  #   strategy:
  #     matrix:
  #       target: [x64]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}
  #         architecture: ${{ matrix.target }}
  #     - name: Install Rust toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         default: true
  #     - name: Build wheels
  #       uses: messense/maturin-action@v1
  #       with:
  #         target: ${{ matrix.target }}
  #         args: --release --out dist
  #         maturin-version: "v0.13.0"
  #     - name: Install built wheel
  #       shell: bash
  #       run: |
  #         python -m pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
  #         pip install pytest
  #         pytest tests/
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: wheels
  #         path: dist

  # build-macos:
  #   runs-on: macos-latest
  #   if: contains(github.event.head_commit.message, 'Automatically generated by python-semantic-release')
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}
  #         architecture: x64
  #     - name: Install Rust toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         default: true
  #     - name: Build wheels - x86_64
  #       uses: messense/maturin-action@v1
  #       with:
  #         target: x86_64
  #         args: --release --out dist --sdist
  #         maturin-version: "v0.13.0"
  #     - name: Install built wheel - x86_64
  #       run: |
  #         pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
  #     - name: Build wheels - universal2
  #       uses: messense/maturin-action@v1
  #       with:
  #         args: --release --universal2 --out dist
  #         maturin-version: "v0.13.0"
  #     - name: Install built wheel - universal2
  #       run: |
  #         pip install dist/${{ env.PACKAGE_NAME }}-*universal2.whl --force-reinstall
  #         pip install pytest
  #         pytest tests/
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: wheels
  #         path: dist

  # ***************************************************************************
  # Release package to Test and then actual PyPI (only on push to main branch)
  # ***************************************************************************
  release:
    name: release
    if: contains(github.event.head_commit.message, 'Automatically generated by python-semantic-release')
    needs: [build-linux]
    # needs: [build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels

      - name: Publish to Test PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_USERNAME: __token__
          MATURIN_PYPI_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
          MATURIN_REPOSITORY_URL: https://test.pypi.org/legacy/
        with:
          command: upload
          args: --skip-existing *

      - name: Test install from Test PyPI
        run: |
          sleep 30 &&
          pip install \
          --index-url https://test.pypi.org/simple/ \
          --extra-index-url https://pypi.org/simple \
          fast-alphashape

      - name: Verify package after install from Test PyPI
        run: python -c "import fast_alphashape; print(fast_alphashape.__version__)"

      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_USERNAME: __token__
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
